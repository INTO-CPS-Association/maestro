# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maestro2

on: [ workflow_dispatch, push, pull_request ]
env:
  JAVA_VERSION: 11.0.3
  SERVER_ID: snapshots
  PYTHON_VERSION: '3.x'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ] #ubuntu-latest,, macos-latest

    steps:
      # https://github.com/msys2/setup-msys2
      #      - uses: msys2/setup-msys2@v2
      #        if: matrix.os == 'windows-latest'
      #        name: MSYS
      #        with:
      #          path-type: inherit
      #          msystem: MINGW64
      #          install: >-
      #            mingw-w64-x86_64-toolchain
      #            mingw-w64-x86_64-cmake
      #            mingw-w64-x86_64-ninja

      - name: Set up Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv

      - uses: actions/checkout@v2

      - name: Maven Build
        run: mvn -D"org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" -B package --file pom.xml -DskipTests

      - name: Maven Test
        #        if: matrix.os == 'windows-latest'
        #        shell: msys2 {0}
        run: mvn -D"org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" test

      #      - name: Maven Test
      #        if: matrix.os != 'windows-latest'
      #        run: mvn test -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: upload test reports win
        uses: actions/upload-artifact@v2
        if: ${{ failure() && matrix.os == 'windows-latest'}}
        with:
          name: surfire-win
          path: |
            **/target/surefire-reports/*
          retention-days: 1

      - name: upload test reports ubuntu
        uses: actions/upload-artifact@v2
        if: ${{ failure() && matrix.os == 'ubuntu-latest'}}
        with:
          name: surfire-ubuntu
          path: |
            **/target/surefire-reports/*
          retention-days: 1


      - name: Install Python Dependencies
        run: |
          cd external_tester
          pipenv install

      - name: CLI Test
        timeout-minutes: 2
        run: |
          cd external_tester
          pipenv run python maestro_cli_test.py

      - name: Web API Test
        timeout-minutes: 2
        run: |
          cd external_tester
          pipenv run python webapi_test.py

      - name: Legacy CLI Test
        timeout-minutes: 2
        run: |
          cd external_tester
          pipenv run python cli_legacy_test.py

      #- name: Threaded Web API test
      #  timeout-minutes: 5
      #  run: |
      #    cd external_tester
      #    python test_simultaneous_simulations.py

  deploy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/development' )

    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Environment variables
        run: echo ${{ env.SERVER_ID }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          server-id: ${{ env.SERVER_ID }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Deploy
        run: mvn -B -Prelease-sources-javadoc deploy
        env:
          MAVEN_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}