simulation
import Initializer;
import JacobianStepBuilder;
import Math;
@Framework("FMI2");
@FrameworkConfig("FMI2","@file: env.json");
{
real START_TIME = 0.0;
real END_TIME = 1.0;
real STEP_SIZE = 0.1;

   	int FMI_STATUS_OK = 0;
  	int FMI_STATUS_WARNING = 1;
  	int FMI_STATUS_DISCARD = 2;
  	int FMI_STATUS_ERROR = 3;
  	int FMI_STATUS_FATAL = 4;
  	int FMI_STATUS_PENDING = 5;

Logger logger = load("Logger");
Math math = load("Math");
FMI2 FMU = load("FMI2", "{967faced-4a63-40a2-9e14-ec5034821404}", "src/test/resources/rollback-test.fmu");
FMI2 Controller = load("FMI2", "{921abe79-6885-4f4f-9663-4d7eb028d531}",  "src/test/resources/rollback-end.fmu");
FMI2Component roller = FMU.instantiate("roller", false, false);;
FMI2Component cont = Controller.instantiate("cont", false, false);;

FMI2Component components[2]={cont, roller};

bool global_execution_continue = true;
int status = 0;

@Config("@file: config.json");
Initializer.expand initialize(components,START_TIME, END_TIME);

@Config("@file: jacobianconfig.json");
JacobianStepBuilder.expand fixedStepSize(components,STEP_SIZE,START_TIME,END_TIME);
Controller.freeInstance(cont);
FMU.freeInstance(roller);

unload(math);
unload(FMU);
unload(Controller);
unload(logger);
}