simulation
import FMI3;
import Logger;
import ArrayUtil;
{
    FMI3 fmuFeedThrough =null;
    ArrayUtil arrayUtil=null;
    try
    {

        int res=0;
        Logger logger = load("Logger");
        fmuFeedThrough = load("FMI3", "{37B954F1-CC86-4D8F-B97F-C7C36F6670D2}", "file:Feedthrough.fmu");
        if (fmuFeedThrough == null)
        {
            error "Oh we cannot load the FeedThrough fmu";
        }
        arrayUtil = load("ArrayUtil");


        string instanceName="my feed through instance";

        bool visible=true;
        bool loggingOn=true;
        bool eventModeUsed=true;
        bool earlyReturnAllowed=true;
        uint requiredIntermediateVariables[0];

        FMI3Instance instance = fmuFeedThrough.instantiateCoSimulation( instanceName,  visible,  loggingOn, eventModeUsed, earlyReturnAllowed, requiredIntermediateVariables);
        if (instance == null)
        {
            error "instance not created";
        }

		/*################################################################
         #                   parameter
         ################################################################*/

		// Testing set for SV='Float64_fixed_parameter' valueReference='5' and causality='parameter'
		real var_108[1]={0};
		uint vref_108[1]={5};
		int status_108= instance.setFloat64(vref_108,1,var_108,1);
		if( status_108 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"setFloat64 status %d for variable 'Float64_fixed_parameter'",status_108);




		// Testing set for SV='Float64_tunable_parameter' valueReference='6' and causality='parameter'
		real var_109[1]={0};
		uint vref_109[1]={6};
		int status_109= instance.setFloat64(vref_109,1,var_109,1);
		if( status_109 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"setFloat64 status %d for variable 'Float64_tunable_parameter'",status_109);




		// Testing set for SV='String_parameter' valueReference='29' and causality='parameter'
		string var_132[1]={"Set me!"};
		uint vref_132[1]={29};
		int status_132= instance.setString(vref_132,1,var_132,1);
		if( status_132 != 0) 
			error "An error occurred during setString"; 
		else 
			logger.log(3,"setString status %d for variable 'String_parameter'",status_132);



        instance.enterInitializationMode(false,0d,0d,true,10d);


		/*################################################################
         #                   input
         ################################################################*/

		// Testing set for SV='Float32_continuous_input' valueReference='1' and causality='input'
		float var_138[1]={0};
		uint vref_138[1]={1};
		int status_138= instance.setFloat32(vref_138,1,var_138,1);
		if( status_138 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"setFloat32 status %d for variable 'Float32_continuous_input'",status_138);




		// Testing set for SV='Float32_discrete_input' valueReference='3' and causality='input'
		float var_140[1]={0};
		uint vref_140[1]={3};
		int status_140= instance.setFloat32(vref_140,1,var_140,1);
		if( status_140 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"setFloat32 status %d for variable 'Float32_discrete_input'",status_140);




		// Testing set for SV='Float64_continuous_input' valueReference='7' and causality='input'
		real var_144[1]={0};
		uint vref_144[1]={7};
		int status_144= instance.setFloat64(vref_144,1,var_144,1);
		if( status_144 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"setFloat64 status %d for variable 'Float64_continuous_input'",status_144);




		// Testing set for SV='Float64_discrete_input' valueReference='9' and causality='input'
		real var_146[1]={0};
		uint vref_146[1]={9};
		int status_146= instance.setFloat64(vref_146,1,var_146,1);
		if( status_146 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"setFloat64 status %d for variable 'Float64_discrete_input'",status_146);




		// Testing set for SV='Int8_input' valueReference='11' and causality='input'
		byte var_148[1]={0};
		uint vref_148[1]={11};
		int status_148= instance.setInt8(vref_148,1,var_148,1);
		if( status_148 != 0) 
			error "An error occurred during setInt8"; 
		else 
			logger.log(3,"setInt8 status %d for variable 'Int8_input'",status_148);




		// Testing set for SV='UInt8_input' valueReference='13' and causality='input'
		byte var_150[1]={0};
		uint vref_150[1]={13};
		int status_150= instance.setUInt8(vref_150,1,var_150,1);
		if( status_150 != 0) 
			error "An error occurred during setUInt8"; 
		else 
			logger.log(3,"setUInt8 status %d for variable 'UInt8_input'",status_150);




		// Testing set for SV='Int16_input' valueReference='15' and causality='input'
		short var_152[1]={0};
		uint vref_152[1]={15};
		int status_152= instance.setInt16(vref_152,1,var_152,1);
		if( status_152 != 0) 
			error "An error occurred during setInt16"; 
		else 
			logger.log(3,"setInt16 status %d for variable 'Int16_input'",status_152);




		// Testing set for SV='UInt16_input' valueReference='17' and causality='input'
		short var_154[1]={0};
		uint vref_154[1]={17};
		int status_154= instance.setUInt16(vref_154,1,var_154,1);
		if( status_154 != 0) 
			error "An error occurred during setUInt16"; 
		else 
			logger.log(3,"setUInt16 status %d for variable 'UInt16_input'",status_154);




		// Testing set for SV='Int32_input' valueReference='19' and causality='input'
		int var_156[1]={0};
		uint vref_156[1]={19};
		int status_156= instance.setInt32(vref_156,1,var_156,1);
		if( status_156 != 0) 
			error "An error occurred during setInt32"; 
		else 
			logger.log(3,"setInt32 status %d for variable 'Int32_input'",status_156);




		// Testing set for SV='UInt32_input' valueReference='21' and causality='input'
		int var_158[1]={0};
		uint vref_158[1]={21};
		int status_158= instance.setUInt32(vref_158,1,var_158,1);
		if( status_158 != 0) 
			error "An error occurred during setUInt32"; 
		else 
			logger.log(3,"setUInt32 status %d for variable 'UInt32_input'",status_158);




		// Testing set for SV='Int64_input' valueReference='23' and causality='input'
		int var_160[1]={0};
		uint vref_160[1]={23};
		int status_160= instance.setInt64(vref_160,1,var_160,1);
		if( status_160 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"setInt64 status %d for variable 'Int64_input'",status_160);




		// Testing set for SV='UInt64_input' valueReference='25' and causality='input'
		int var_162[1]={0};
		uint vref_162[1]={25};
		int status_162= instance.setUInt64(vref_162,1,var_162,1);
		if( status_162 != 0) 
			error "An error occurred during setUInt64"; 
		else 
			logger.log(3,"setUInt64 status %d for variable 'UInt64_input'",status_162);




		// Testing set for SV='Boolean_input' valueReference='27' and causality='input'
		bool var_164[1]={false};
		uint vref_164[1]={27};
		int status_164= instance.setBoolean(vref_164,1,var_164,1);
		if( status_164 != 0) 
			error "An error occurred during setBoolean"; 
		else 
			logger.log(3,"setBoolean status %d for variable 'Boolean_input'",status_164);




		// Testing set for SV='Binary_input' valueReference='30' and causality='input'
		ByteArrayArray var_167 = arrayUtil.createByteArrayArray(1);
            byte bytes_167[3] = {102,111,111};
            var_167.set(0,bytes_167);
                        
		uint vref_167[1]={30};
		int status_167= instance.setBinary(vref_167,1,var_167);
		if( status_167 != 0) 
			error "An error occurred during setBinary"; 
		else 
			logger.log(3,"setBinary status %d for variable 'Binary_input'",status_167);




		// Testing set for SV='Enumeration_input' valueReference='32' and causality='input'
		int var_169[1]={1};
		uint vref_169[1]={32};
		int status_169= instance.setInt64(vref_169,1,var_169,1);
		if( status_169 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"setInt64 status %d for variable 'Enumeration_input'",status_169);



        instance.exitInitializationMode();
		/*################################################################
         #                   output
         ################################################################*/
		real var_171[1000];
		uint vref_171[1]={0};

		int status_171= instance.getFloat64(vref_171,1,ref var_171,1);
		if( status_171 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'time'",status_171);
		if( status_171 == 0)
			logger.log(3,"	time --> %f",var_171[0]);



		float var_172[1000];
		uint vref_172[1]={1};

		int status_172= instance.getFloat32(vref_172,1,ref var_172,1);
		if( status_172 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_continuous_input'",status_172);
		if( status_172 == 0)
			logger.log(3,"	Float32_continuous_input --> %f",var_172[0]);



		float var_173[1000];
		uint vref_173[1]={2};

		int status_173= instance.getFloat32(vref_173,1,ref var_173,1);
		if( status_173 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_continuous_output'",status_173);
		if( status_173 == 0)
			logger.log(3,"	Float32_continuous_output --> %f",var_173[0]);



		float var_174[1000];
		uint vref_174[1]={3};

		int status_174= instance.getFloat32(vref_174,1,ref var_174,1);
		if( status_174 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_discrete_input'",status_174);
		if( status_174 == 0)
			logger.log(3,"	Float32_discrete_input --> %f",var_174[0]);



		float var_175[1000];
		uint vref_175[1]={4};

		int status_175= instance.getFloat32(vref_175,1,ref var_175,1);
		if( status_175 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_discrete_output'",status_175);
		if( status_175 == 0)
			logger.log(3,"	Float32_discrete_output --> %f",var_175[0]);



		real var_176[1000];
		uint vref_176[1]={5};

		int status_176= instance.getFloat64(vref_176,1,ref var_176,1);
		if( status_176 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_fixed_parameter'",status_176);
		if( status_176 == 0)
			logger.log(3,"	Float64_fixed_parameter --> %f",var_176[0]);



		real var_177[1000];
		uint vref_177[1]={6};

		int status_177= instance.getFloat64(vref_177,1,ref var_177,1);
		if( status_177 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_tunable_parameter'",status_177);
		if( status_177 == 0)
			logger.log(3,"	Float64_tunable_parameter --> %f",var_177[0]);



		real var_178[1000];
		uint vref_178[1]={7};

		int status_178= instance.getFloat64(vref_178,1,ref var_178,1);
		if( status_178 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_continuous_input'",status_178);
		if( status_178 == 0)
			logger.log(3,"	Float64_continuous_input --> %f",var_178[0]);



		real var_179[1000];
		uint vref_179[1]={8};

		int status_179= instance.getFloat64(vref_179,1,ref var_179,1);
		if( status_179 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_continuous_output'",status_179);
		if( status_179 == 0)
			logger.log(3,"	Float64_continuous_output --> %f",var_179[0]);



		real var_180[1000];
		uint vref_180[1]={9};

		int status_180= instance.getFloat64(vref_180,1,ref var_180,1);
		if( status_180 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_discrete_input'",status_180);
		if( status_180 == 0)
			logger.log(3,"	Float64_discrete_input --> %f",var_180[0]);



		real var_181[1000];
		uint vref_181[1]={10};

		int status_181= instance.getFloat64(vref_181,1,ref var_181,1);
		if( status_181 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_discrete_output'",status_181);
		if( status_181 == 0)
			logger.log(3,"	Float64_discrete_output --> %f",var_181[0]);



		byte var_182[1000];
		uint vref_182[1]={11};

		int status_182= instance.getInt8(vref_182,1,ref var_182,1);
		if( status_182 != 0) 
			error "An error occurred during setInt8"; 
		else 
			logger.log(3,"getInt8 status %d for variable 'Int8_input'",status_182);
		if( status_182 == 0)
			logger.log(3,"	Int8_input --> %d",var_182[0]);



		byte var_183[1000];
		uint vref_183[1]={12};

		int status_183= instance.getInt8(vref_183,1,ref var_183,1);
		if( status_183 != 0) 
			error "An error occurred during setInt8"; 
		else 
			logger.log(3,"getInt8 status %d for variable 'Int8_output'",status_183);
		if( status_183 == 0)
			logger.log(3,"	Int8_output --> %d",var_183[0]);



		byte var_184[1000];
		uint vref_184[1]={13};

		int status_184= instance.getUInt8(vref_184,1,ref var_184,1);
		if( status_184 != 0) 
			error "An error occurred during setUInt8"; 
		else 
			logger.log(3,"getUInt8 status %d for variable 'UInt8_input'",status_184);
		if( status_184 == 0)
			logger.log(3,"	UInt8_input --> %d",var_184[0]);



		byte var_185[1000];
		uint vref_185[1]={14};

		int status_185= instance.getUInt8(vref_185,1,ref var_185,1);
		if( status_185 != 0) 
			error "An error occurred during setUInt8"; 
		else 
			logger.log(3,"getUInt8 status %d for variable 'UInt8_output'",status_185);
		if( status_185 == 0)
			logger.log(3,"	UInt8_output --> %d",var_185[0]);



		short var_186[1000];
		uint vref_186[1]={15};

		int status_186= instance.getInt16(vref_186,1,ref var_186,1);
		if( status_186 != 0) 
			error "An error occurred during setInt16"; 
		else 
			logger.log(3,"getInt16 status %d for variable 'Int16_input'",status_186);
		if( status_186 == 0)
			logger.log(3,"	Int16_input --> %d",var_186[0]);



		short var_187[1000];
		uint vref_187[1]={16};

		int status_187= instance.getInt16(vref_187,1,ref var_187,1);
		if( status_187 != 0) 
			error "An error occurred during setInt16"; 
		else 
			logger.log(3,"getInt16 status %d for variable 'Int16_output'",status_187);
		if( status_187 == 0)
			logger.log(3,"	Int16_output --> %d",var_187[0]);



		short var_188[1000];
		uint vref_188[1]={17};

		int status_188= instance.getUInt16(vref_188,1,ref var_188,1);
		if( status_188 != 0) 
			error "An error occurred during setUInt16"; 
		else 
			logger.log(3,"getUInt16 status %d for variable 'UInt16_input'",status_188);
		if( status_188 == 0)
			logger.log(3,"	UInt16_input --> %d",var_188[0]);



		short var_189[1000];
		uint vref_189[1]={18};

		int status_189= instance.getUInt16(vref_189,1,ref var_189,1);
		if( status_189 != 0) 
			error "An error occurred during setUInt16"; 
		else 
			logger.log(3,"getUInt16 status %d for variable 'UInt16_output'",status_189);
		if( status_189 == 0)
			logger.log(3,"	UInt16_output --> %d",var_189[0]);



		int var_190[1000];
		uint vref_190[1]={19};

		int status_190= instance.getInt32(vref_190,1,ref var_190,1);
		if( status_190 != 0) 
			error "An error occurred during setInt32"; 
		else 
			logger.log(3,"getInt32 status %d for variable 'Int32_input'",status_190);
		if( status_190 == 0)
			logger.log(3,"	Int32_input --> %d",var_190[0]);



		int var_191[1000];
		uint vref_191[1]={20};

		int status_191= instance.getInt32(vref_191,1,ref var_191,1);
		if( status_191 != 0) 
			error "An error occurred during setInt32"; 
		else 
			logger.log(3,"getInt32 status %d for variable 'Int32_output'",status_191);
		if( status_191 == 0)
			logger.log(3,"	Int32_output --> %d",var_191[0]);



		int var_192[1000];
		uint vref_192[1]={21};

		int status_192= instance.getUInt32(vref_192,1,ref var_192,1);
		if( status_192 != 0) 
			error "An error occurred during setUInt32"; 
		else 
			logger.log(3,"getUInt32 status %d for variable 'UInt32_input'",status_192);
		if( status_192 == 0)
			logger.log(3,"	UInt32_input --> %d",var_192[0]);



		int var_193[1000];
		uint vref_193[1]={22};

		int status_193= instance.getUInt32(vref_193,1,ref var_193,1);
		if( status_193 != 0) 
			error "An error occurred during setUInt32"; 
		else 
			logger.log(3,"getUInt32 status %d for variable 'UInt32_output'",status_193);
		if( status_193 == 0)
			logger.log(3,"	UInt32_output --> %d",var_193[0]);



		int var_194[1000];
		uint vref_194[1]={23};

		int status_194= instance.getInt64(vref_194,1,ref var_194,1);
		if( status_194 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Int64_input'",status_194);
		if( status_194 == 0)
			logger.log(3,"	Int64_input --> %d",var_194[0]);



		int var_195[1000];
		uint vref_195[1]={24};

		int status_195= instance.getInt64(vref_195,1,ref var_195,1);
		if( status_195 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Int64_output'",status_195);
		if( status_195 == 0)
			logger.log(3,"	Int64_output --> %d",var_195[0]);



		int var_196[1000];
		uint vref_196[1]={25};

		int status_196= instance.getUInt64(vref_196,1,ref var_196,1);
		if( status_196 != 0) 
			error "An error occurred during setUInt64"; 
		else 
			logger.log(3,"getUInt64 status %d for variable 'UInt64_input'",status_196);
		if( status_196 == 0)
			logger.log(3,"	UInt64_input --> %d",var_196[0]);



		int var_197[1000];
		uint vref_197[1]={26};

		int status_197= instance.getUInt64(vref_197,1,ref var_197,1);
		if( status_197 != 0) 
			error "An error occurred during setUInt64"; 
		else 
			logger.log(3,"getUInt64 status %d for variable 'UInt64_output'",status_197);
		if( status_197 == 0)
			logger.log(3,"	UInt64_output --> %d",var_197[0]);



		bool var_198[1000];
		uint vref_198[1]={27};

		int status_198= instance.getBoolean(vref_198,1,ref var_198,1);
		if( status_198 != 0) 
			error "An error occurred during setBoolean"; 
		else 
			logger.log(3,"getBoolean status %d for variable 'Boolean_input'",status_198);
		if( status_198 == 0)
			logger.log(3,"	Boolean_input --> %b",var_198[0]);



		bool var_199[1000];
		uint vref_199[1]={28};

		int status_199= instance.getBoolean(vref_199,1,ref var_199,1);
		if( status_199 != 0) 
			error "An error occurred during setBoolean"; 
		else 
			logger.log(3,"getBoolean status %d for variable 'Boolean_output'",status_199);
		if( status_199 == 0)
			logger.log(3,"	Boolean_output --> %b",var_199[0]);



		string var_200[1000];
		uint vref_200[1]={29};

		int status_200= instance.getString(vref_200,1,ref var_200,1);
		if( status_200 != 0) 
			error "An error occurred during setString"; 
		else 
			logger.log(3,"getString status %d for variable 'String_parameter'",status_200);
		if( status_200 == 0)
			logger.log(3,"	String_parameter --> %s",var_200[0]);



		ByteArrayArray var_201=arrayUtil.createByteArrayArray(0);
		uint vref_201[1]={30};

		int status_201= instance.getBinary(vref_201,1,ref var_201);
		if( status_201 != 0) 
			error "An error occurred during setBinary"; 
		else 
			logger.log(3,"getBinary status %d for variable 'Binary_input'",status_201);



		ByteArrayArray var_202=arrayUtil.createByteArrayArray(0);
		uint vref_202[1]={31};

		int status_202= instance.getBinary(vref_202,1,ref var_202);
		if( status_202 != 0) 
			error "An error occurred during setBinary"; 
		else 
			logger.log(3,"getBinary status %d for variable 'Binary_output'",status_202);



		int var_203[1000];
		uint vref_203[1]={32};

		int status_203= instance.getInt64(vref_203,1,ref var_203,1);
		if( status_203 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Enumeration_input'",status_203);
		if( status_203 == 0)
			logger.log(3,"	Enumeration_input --> %d",var_203[0]);



		int var_204[1000];
		uint vref_204[1]={33};

		int status_204= instance.getInt64(vref_204,1,ref var_204,1);
		if( status_204 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Enumeration_output'",status_204);
		if( status_204 == 0)
			logger.log(3,"	Enumeration_output --> %d",var_204[0]);




        res=instance.enterStepMode();
        logger.log(3,"enterStepMode status %d",res);

//IN_STEP_MODE_BEFORE_LOOP

        real step =0.1;
        real time=0;
        real end=10;

        bool nosetFMUStatePriorToCurrentPoint=false;
        bool eventHandlingNeeded=false;
        bool terminateSimulation=false;
        bool earlyReturn=false;
        real lastSuccessfulTime=0.0;


        while(time < end-step)
        {
            res = instance.doStep(time,
                                    step,
                                    nosetFMUStatePriorToCurrentPoint,
                                    ref eventHandlingNeeded,
                                    ref terminateSimulation,
                                    ref earlyReturn,
                                    ref lastSuccessfulTime);
            logger.log(3,"doStep status %d, earlyreturn %b, lassSuccessfulTime %f",res,earlyReturn, lastSuccessfulTime);



            		/*################################################################
         #                   output
         ################################################################*/
		real var_205[1000];
		uint vref_205[1]={0};

		int status_205= instance.getFloat64(vref_205,1,ref var_205,1);
		if( status_205 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'time'",status_205);
		if( status_205 == 0)
			logger.log(3,"	time --> %f",var_205[0]);



		float var_206[1000];
		uint vref_206[1]={1};

		int status_206= instance.getFloat32(vref_206,1,ref var_206,1);
		if( status_206 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_continuous_input'",status_206);
		if( status_206 == 0)
			logger.log(3,"	Float32_continuous_input --> %f",var_206[0]);



		float var_207[1000];
		uint vref_207[1]={2};

		int status_207= instance.getFloat32(vref_207,1,ref var_207,1);
		if( status_207 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_continuous_output'",status_207);
		if( status_207 == 0)
			logger.log(3,"	Float32_continuous_output --> %f",var_207[0]);



		float var_208[1000];
		uint vref_208[1]={3};

		int status_208= instance.getFloat32(vref_208,1,ref var_208,1);
		if( status_208 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_discrete_input'",status_208);
		if( status_208 == 0)
			logger.log(3,"	Float32_discrete_input --> %f",var_208[0]);



		float var_209[1000];
		uint vref_209[1]={4};

		int status_209= instance.getFloat32(vref_209,1,ref var_209,1);
		if( status_209 != 0) 
			error "An error occurred during setFloat32"; 
		else 
			logger.log(3,"getFloat32 status %d for variable 'Float32_discrete_output'",status_209);
		if( status_209 == 0)
			logger.log(3,"	Float32_discrete_output --> %f",var_209[0]);



		real var_210[1000];
		uint vref_210[1]={5};

		int status_210= instance.getFloat64(vref_210,1,ref var_210,1);
		if( status_210 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_fixed_parameter'",status_210);
		if( status_210 == 0)
			logger.log(3,"	Float64_fixed_parameter --> %f",var_210[0]);



		real var_211[1000];
		uint vref_211[1]={6};

		int status_211= instance.getFloat64(vref_211,1,ref var_211,1);
		if( status_211 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_tunable_parameter'",status_211);
		if( status_211 == 0)
			logger.log(3,"	Float64_tunable_parameter --> %f",var_211[0]);



		real var_212[1000];
		uint vref_212[1]={7};

		int status_212= instance.getFloat64(vref_212,1,ref var_212,1);
		if( status_212 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_continuous_input'",status_212);
		if( status_212 == 0)
			logger.log(3,"	Float64_continuous_input --> %f",var_212[0]);



		real var_213[1000];
		uint vref_213[1]={8};

		int status_213= instance.getFloat64(vref_213,1,ref var_213,1);
		if( status_213 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_continuous_output'",status_213);
		if( status_213 == 0)
			logger.log(3,"	Float64_continuous_output --> %f",var_213[0]);



		real var_214[1000];
		uint vref_214[1]={9};

		int status_214= instance.getFloat64(vref_214,1,ref var_214,1);
		if( status_214 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_discrete_input'",status_214);
		if( status_214 == 0)
			logger.log(3,"	Float64_discrete_input --> %f",var_214[0]);



		real var_215[1000];
		uint vref_215[1]={10};

		int status_215= instance.getFloat64(vref_215,1,ref var_215,1);
		if( status_215 != 0) 
			error "An error occurred during setFloat64"; 
		else 
			logger.log(3,"getFloat64 status %d for variable 'Float64_discrete_output'",status_215);
		if( status_215 == 0)
			logger.log(3,"	Float64_discrete_output --> %f",var_215[0]);



		byte var_216[1000];
		uint vref_216[1]={11};

		int status_216= instance.getInt8(vref_216,1,ref var_216,1);
		if( status_216 != 0) 
			error "An error occurred during setInt8"; 
		else 
			logger.log(3,"getInt8 status %d for variable 'Int8_input'",status_216);
		if( status_216 == 0)
			logger.log(3,"	Int8_input --> %d",var_216[0]);



		byte var_217[1000];
		uint vref_217[1]={12};

		int status_217= instance.getInt8(vref_217,1,ref var_217,1);
		if( status_217 != 0) 
			error "An error occurred during setInt8"; 
		else 
			logger.log(3,"getInt8 status %d for variable 'Int8_output'",status_217);
		if( status_217 == 0)
			logger.log(3,"	Int8_output --> %d",var_217[0]);



		byte var_218[1000];
		uint vref_218[1]={13};

		int status_218= instance.getUInt8(vref_218,1,ref var_218,1);
		if( status_218 != 0) 
			error "An error occurred during setUInt8"; 
		else 
			logger.log(3,"getUInt8 status %d for variable 'UInt8_input'",status_218);
		if( status_218 == 0)
			logger.log(3,"	UInt8_input --> %d",var_218[0]);



		byte var_219[1000];
		uint vref_219[1]={14};

		int status_219= instance.getUInt8(vref_219,1,ref var_219,1);
		if( status_219 != 0) 
			error "An error occurred during setUInt8"; 
		else 
			logger.log(3,"getUInt8 status %d for variable 'UInt8_output'",status_219);
		if( status_219 == 0)
			logger.log(3,"	UInt8_output --> %d",var_219[0]);



		short var_220[1000];
		uint vref_220[1]={15};

		int status_220= instance.getInt16(vref_220,1,ref var_220,1);
		if( status_220 != 0) 
			error "An error occurred during setInt16"; 
		else 
			logger.log(3,"getInt16 status %d for variable 'Int16_input'",status_220);
		if( status_220 == 0)
			logger.log(3,"	Int16_input --> %d",var_220[0]);



		short var_221[1000];
		uint vref_221[1]={16};

		int status_221= instance.getInt16(vref_221,1,ref var_221,1);
		if( status_221 != 0) 
			error "An error occurred during setInt16"; 
		else 
			logger.log(3,"getInt16 status %d for variable 'Int16_output'",status_221);
		if( status_221 == 0)
			logger.log(3,"	Int16_output --> %d",var_221[0]);



		short var_222[1000];
		uint vref_222[1]={17};

		int status_222= instance.getUInt16(vref_222,1,ref var_222,1);
		if( status_222 != 0) 
			error "An error occurred during setUInt16"; 
		else 
			logger.log(3,"getUInt16 status %d for variable 'UInt16_input'",status_222);
		if( status_222 == 0)
			logger.log(3,"	UInt16_input --> %d",var_222[0]);



		short var_223[1000];
		uint vref_223[1]={18};

		int status_223= instance.getUInt16(vref_223,1,ref var_223,1);
		if( status_223 != 0) 
			error "An error occurred during setUInt16"; 
		else 
			logger.log(3,"getUInt16 status %d for variable 'UInt16_output'",status_223);
		if( status_223 == 0)
			logger.log(3,"	UInt16_output --> %d",var_223[0]);



		int var_224[1000];
		uint vref_224[1]={19};

		int status_224= instance.getInt32(vref_224,1,ref var_224,1);
		if( status_224 != 0) 
			error "An error occurred during setInt32"; 
		else 
			logger.log(3,"getInt32 status %d for variable 'Int32_input'",status_224);
		if( status_224 == 0)
			logger.log(3,"	Int32_input --> %d",var_224[0]);



		int var_225[1000];
		uint vref_225[1]={20};

		int status_225= instance.getInt32(vref_225,1,ref var_225,1);
		if( status_225 != 0) 
			error "An error occurred during setInt32"; 
		else 
			logger.log(3,"getInt32 status %d for variable 'Int32_output'",status_225);
		if( status_225 == 0)
			logger.log(3,"	Int32_output --> %d",var_225[0]);



		int var_226[1000];
		uint vref_226[1]={21};

		int status_226= instance.getUInt32(vref_226,1,ref var_226,1);
		if( status_226 != 0) 
			error "An error occurred during setUInt32"; 
		else 
			logger.log(3,"getUInt32 status %d for variable 'UInt32_input'",status_226);
		if( status_226 == 0)
			logger.log(3,"	UInt32_input --> %d",var_226[0]);



		int var_227[1000];
		uint vref_227[1]={22};

		int status_227= instance.getUInt32(vref_227,1,ref var_227,1);
		if( status_227 != 0) 
			error "An error occurred during setUInt32"; 
		else 
			logger.log(3,"getUInt32 status %d for variable 'UInt32_output'",status_227);
		if( status_227 == 0)
			logger.log(3,"	UInt32_output --> %d",var_227[0]);



		int var_228[1000];
		uint vref_228[1]={23};

		int status_228= instance.getInt64(vref_228,1,ref var_228,1);
		if( status_228 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Int64_input'",status_228);
		if( status_228 == 0)
			logger.log(3,"	Int64_input --> %d",var_228[0]);



		int var_229[1000];
		uint vref_229[1]={24};

		int status_229= instance.getInt64(vref_229,1,ref var_229,1);
		if( status_229 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Int64_output'",status_229);
		if( status_229 == 0)
			logger.log(3,"	Int64_output --> %d",var_229[0]);



		int var_230[1000];
		uint vref_230[1]={25};

		int status_230= instance.getUInt64(vref_230,1,ref var_230,1);
		if( status_230 != 0) 
			error "An error occurred during setUInt64"; 
		else 
			logger.log(3,"getUInt64 status %d for variable 'UInt64_input'",status_230);
		if( status_230 == 0)
			logger.log(3,"	UInt64_input --> %d",var_230[0]);



		int var_231[1000];
		uint vref_231[1]={26};

		int status_231= instance.getUInt64(vref_231,1,ref var_231,1);
		if( status_231 != 0) 
			error "An error occurred during setUInt64"; 
		else 
			logger.log(3,"getUInt64 status %d for variable 'UInt64_output'",status_231);
		if( status_231 == 0)
			logger.log(3,"	UInt64_output --> %d",var_231[0]);



		bool var_232[1000];
		uint vref_232[1]={27};

		int status_232= instance.getBoolean(vref_232,1,ref var_232,1);
		if( status_232 != 0) 
			error "An error occurred during setBoolean"; 
		else 
			logger.log(3,"getBoolean status %d for variable 'Boolean_input'",status_232);
		if( status_232 == 0)
			logger.log(3,"	Boolean_input --> %b",var_232[0]);



		bool var_233[1000];
		uint vref_233[1]={28};

		int status_233= instance.getBoolean(vref_233,1,ref var_233,1);
		if( status_233 != 0) 
			error "An error occurred during setBoolean"; 
		else 
			logger.log(3,"getBoolean status %d for variable 'Boolean_output'",status_233);
		if( status_233 == 0)
			logger.log(3,"	Boolean_output --> %b",var_233[0]);



		string var_234[1000];
		uint vref_234[1]={29};

		int status_234= instance.getString(vref_234,1,ref var_234,1);
		if( status_234 != 0) 
			error "An error occurred during setString"; 
		else 
			logger.log(3,"getString status %d for variable 'String_parameter'",status_234);
		if( status_234 == 0)
			logger.log(3,"	String_parameter --> %s",var_234[0]);



		ByteArrayArray var_235=arrayUtil.createByteArrayArray(0);
		uint vref_235[1]={30};

		int status_235= instance.getBinary(vref_235,1,ref var_235);
		if( status_235 != 0) 
			error "An error occurred during setBinary"; 
		else 
			logger.log(3,"getBinary status %d for variable 'Binary_input'",status_235);



		ByteArrayArray var_236=arrayUtil.createByteArrayArray(0);
		uint vref_236[1]={31};

		int status_236= instance.getBinary(vref_236,1,ref var_236);
		if( status_236 != 0) 
			error "An error occurred during setBinary"; 
		else 
			logger.log(3,"getBinary status %d for variable 'Binary_output'",status_236);



		int var_237[1000];
		uint vref_237[1]={32};

		int status_237= instance.getInt64(vref_237,1,ref var_237,1);
		if( status_237 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Enumeration_input'",status_237);
		if( status_237 == 0)
			logger.log(3,"	Enumeration_input --> %d",var_237[0]);



		int var_238[1000];
		uint vref_238[1]={33};

		int status_238= instance.getInt64(vref_238,1,ref var_238,1);
		if( status_238 != 0) 
			error "An error occurred during setInt64"; 
		else 
			logger.log(3,"getInt64 status %d for variable 'Enumeration_output'",status_238);
		if( status_238 == 0)
			logger.log(3,"	Enumeration_output --> %d",var_238[0]);



            time = time + step;
        }

        res=instance.terminate();
        logger.log(3,"terminate status %d",res);

  //AFTER_TERMINATE

        unload(logger);
        fmuFeedThrough.freeInstance(instance);

    }
    finally
    {
        unload(fmuFeedThrough);
        unload(arrayUtil);
    }
}
