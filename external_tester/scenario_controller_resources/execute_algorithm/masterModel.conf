name = fromMultiModel
scenario = {
fmus = {
FMU_roller = { 
 can-reject-step = true,
 inputs = {
valve = {reactivity=delayed}},
 outputs = {
level = {dependencies-init=[valve], dependencies=[valve]}}
 }
Controller_cont = { 
 can-reject-step = true,
 inputs = {
level = {reactivity=delayed}},
 outputs = {
}
 }}
connections = [
FMU_roller.level -> Controller_cont.level]
}
initialization = [{set: FMU_roller.valve}

{get: FMU_roller.level}

{set: Controller_cont.level}
]
cosim-step = [{save-state: Controller_cont}

{save-state: FMU_roller}

{loop: { 
 until-step-accept: [Controller_cont,FMU_roller] 
 iterate: [{step: Controller_cont }

{step: FMU_roller }
] 
 if-retry-needed: [{restore-state: Controller_cont}

{restore-state: FMU_roller}
]} 
 }

{set: FMU_roller.valve}

{get: FMU_roller.level}

{set: Controller_cont.level}
]
