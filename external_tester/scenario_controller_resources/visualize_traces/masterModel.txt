name = "Simple master algorithm where an FMU can reject step sizes"
scenario = {
    fmus = {
        msd1 = {
            can-reject-step = true,
            inputs = {
                fk = {reactivity=delayed}
            },
            outputs = {
                x1 = {dependencies-init=[], dependencies=[]}
                v1 = {dependencies-init=[], dependencies=[]}
            }
        }
        msd2 = {
            inputs = {
                x1 = {reactivity=reactive}
                v1 = {reactivity=reactive}
            },
            outputs = {
                fk = {dependencies-init=[x1, v1], dependencies=[x1, v1]}
            }
        }
        msd3 = {
            inputs = {
                fk = {reactivity=delayed}
            }
        }
    }
    connections = [
        msd1.x1 -> msd2.x1
        msd1.v1 -> msd2.v1
        msd2.fk -> msd1.fk
        msd2.fk -> msd3.fk
    ]
    max-possible-step-size = 3 # This means all possible steps that the master can take at each cosimstep.
}
initialization = [
    {get: msd1.x1}
    {set: msd2.x1}
    {get: msd1.v1}
    {set: msd2.v1}
    {get: msd2.fk}
    {set: msd1.fk}
    {set: msd3.fk}
]
cosim-step = [
    {step: msd1} # This takes the default step size, which is 3
    {step: msd3} # This means that the step taken is 3
    {get: msd1.x1}
    {set: msd2.x1}
    {get: msd1.v1}
    {set: msd2.v1}
    {step: msd2} # This means that the step taken is the same as the step accepted by msd3 in the last call to step msd1
    {get: msd2.fk}
    {set: msd1.fk}
    {set: msd3.fk}
]